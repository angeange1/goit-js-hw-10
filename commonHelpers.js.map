{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\"\nimport \"flatpickr/dist/flatpickr.min.css\"\nimport iziToast from \"izitoast\"\nimport \"izitoast/dist/css/iziToast.min.css\"\n\nconst dateInput = document.getElementById(\"datetime-picker\")\nconst startBtn = document.querySelector('[data-start]')\nconst daysHand = document.querySelector('[data-days]')\nconst hoursHand = document.querySelector('[data-hours]')\nconst minutesHand = document.querySelector('[data-minutes]')\nconst secondsHand = document.querySelector('[data-seconds]')\n\nlet userSelectedDate\nlet msdiff\n\nstartBtn.disabled = true\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0])\n    msdiff = selectedDates[0] - options.defaultDate\n    if (msdiff < 1) {\n      startBtn.disabled = true\n      iziToast.error({\n      message: `Please choose a date in the future`\n      });\n    } else {\n      startBtn.disabled = false\n      userSelectedDate = selectedDates[0]\n    }\n  },\n};\n\nconst fp = flatpickr(dateInput, options)\n\nstartBtn.addEventListener('click', event => {\n  const intervalId = setInterval(() => {\n    const currentTime = Date.now()\n    msdiff = userSelectedDate - currentTime\n    dateInput.disabled = true\n    startBtn.disabled = true\n    if (msdiff < 1) {\n      startBtn.disabled = false\n      dateInput.disabled = false\n      clearInterval(intervalId)\n      return\n    }\n    const timeLeft = convertMs(msdiff)\n      console.log(timeLeft)\n\n    daysHand.textContent = addLeadingZero(timeLeft.days)\n    hoursHand.textContent = addLeadingZero(timeLeft.hours)\n    minutesHand.textContent = addLeadingZero(timeLeft.minutes)\n    secondsHand.textContent = addLeadingZero(timeLeft.seconds)\n  },\n    1000);\n})\n\nfunction addLeadingZero(value) {return value.toString().padStart(2,\"0\")}\n  \nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    return { days, hours, minutes, seconds };\n}"],"names":["dateInput","startBtn","daysHand","hoursHand","minutesHand","secondsHand","userSelectedDate","msdiff","options","selectedDates","iziToast","flatpickr","event","intervalId","currentTime","timeLeft","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"2FAKA,MAAMA,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EACAC,EAEJN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BF,EAASE,EAAc,CAAC,EAAID,EAAQ,YAChCD,EAAS,GACXN,EAAS,SAAW,GACpBS,EAAS,MAAM,CACf,QAAS,oCACf,CAAO,IAEDT,EAAS,SAAW,GACpBK,EAAmBG,EAAc,CAAC,EAErC,CACH,EAEWE,EAAUX,EAAWQ,CAAO,EAEvCP,EAAS,iBAAiB,QAASW,GAAS,CAC1C,MAAMC,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,IAAK,EAI9B,GAHAP,EAASD,EAAmBQ,EAC5Bd,EAAU,SAAW,GACrBC,EAAS,SAAW,GAChBM,EAAS,EAAG,CACdN,EAAS,SAAW,GACpBD,EAAU,SAAW,GACrB,cAAca,CAAU,EACxB,MACD,CACD,MAAME,EAAWC,EAAUT,CAAM,EAC/B,QAAQ,IAAIQ,CAAQ,EAEtBb,EAAS,YAAce,EAAeF,EAAS,IAAI,EACnDZ,EAAU,YAAcc,EAAeF,EAAS,KAAK,EACrDX,EAAY,YAAca,EAAeF,EAAS,OAAO,EACzDV,EAAY,YAAcY,EAAeF,EAAS,OAAO,CAC1D,EACC,GAAI,CACR,CAAC,EAED,SAASE,EAAeC,EAAO,CAAC,OAAOA,EAAM,SAAQ,EAAG,SAAS,EAAE,GAAG,CAAC,CAEvE,SAASF,EAAUG,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAChE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}